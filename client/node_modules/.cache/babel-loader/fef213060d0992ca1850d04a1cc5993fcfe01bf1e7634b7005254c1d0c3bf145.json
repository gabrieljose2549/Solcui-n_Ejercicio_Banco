{"ast":null,"code":"var _jsxFileName = \"/Users/josemontero/Documents/Pasanti\\u0301as/Code/Actividad/BANCO/client/src/Components/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = _ref => {\n  _s();\n  var _match$params;\n  let {\n    match,\n    token\n  } = _ref;\n  const [accountType, setAccountType] = useState(\"\");\n  const [accountStatus, setAccountStatus] = useState(\"\");\n  const [accountFunds, setAccountFunds] = useState(0);\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const userId = match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.userId;\n  useEffect(() => {\n    // Al cargar el componente, obtener la lista de cuentas del usuario\n    fetchAccounts();\n  }, [token]);\n  const fetchAccounts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/accounts/user/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAccounts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching accounts:\", error);\n    }\n  };\n  const createAccount = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8000/api/accounts/user/new/${userId}`, {\n        accountType,\n        accountStatus,\n        accountFunds,\n        accountNumber\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Account created successfully\");\n      // Actualizar la lista de cuentas después de la creación\n      fetchAccounts();\n    } catch (error) {\n      alert(\"Error creating account: \" + error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAccountType(e.target.value),\n        value: accountType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAccountStatus(e.target.value),\n        value: accountStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Funds: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setAccountFunds(e.target.value),\n        value: accountFunds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAccountNumber(e.target.value),\n        value: accountNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createAccount,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Type: \", account.accountType, \", Status: \", account.accountStatus, \",\", \" \", \"Funds: \", account.accountFunds, \", Number: \", account.accountNumber]\n      }, account._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"f6fgb5D8Y6xDgIdePMZmLFeL/qQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_ref","_s","_match$params","match","token","accountType","setAccountType","accountStatus","setAccountStatus","accountFunds","setAccountFunds","accountNumber","setAccountNumber","accounts","setAccounts","userId","params","fetchAccounts","response","get","headers","Authorization","data","error","console","createAccount","post","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","map","account","_id","_c","$RefreshReg$"],"sources":["/Users/josemontero/Documents/Pasantías/Code/Actividad/BANCO/client/src/Components/Dashboard.jsx"],"sourcesContent":["// Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Dashboard = ({ match, token }) => {\n  const [accountType, setAccountType] = useState(\"\");\n  const [accountStatus, setAccountStatus] = useState(\"\");\n  const [accountFunds, setAccountFunds] = useState(0);\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n  const userId = match?.params?.userId;\n\n  useEffect(() => {\n    // Al cargar el componente, obtener la lista de cuentas del usuario\n    fetchAccounts();\n  }, [token]);\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/accounts/user/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setAccounts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching accounts:\", error);\n    }\n  };\n\n  const createAccount = async () => {\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/accounts/user/new/${userId}`,\n        {\n          accountType,\n          accountStatus,\n          accountFunds,\n          accountNumber,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      alert(\"Account created successfully\");\n      // Actualizar la lista de cuentas después de la creación\n      fetchAccounts();\n    } catch (error) {\n      alert(\"Error creating account: \" + error.response.data.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Create Account</h2>\n      <form>\n        <label>Account Type: </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setAccountType(e.target.value)}\n          value={accountType}\n        />\n        <br />\n\n        <label>Account Status: </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setAccountStatus(e.target.value)}\n          value={accountStatus}\n        />\n        <br />\n\n        <label>Account Funds: </label>\n        <input\n          type=\"number\"\n          onChange={(e) => setAccountFunds(e.target.value)}\n          value={accountFunds}\n        />\n        <br />\n\n        <label>Account Number: </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setAccountNumber(e.target.value)}\n          value={accountNumber}\n        />\n        <br />\n\n        <button type=\"button\" onClick={createAccount}>\n          Create Account\n        </button>\n      </form>\n\n      <h2>Your Accounts</h2>\n      <ul>\n        {accounts.map((account) => (\n          <li key={account._id}>\n            Type: {account.accountType}, Status: {account.accountStatus},{\" \"}\n            Funds: {account.accountFunds}, Number: {account.accountNumber}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}