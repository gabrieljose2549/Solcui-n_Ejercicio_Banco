{"ast":null,"code":"var _jsxFileName = \"/Users/josemontero/Documents/Pasanti\\u0301as/Code/Actividad/BANCO/client/src/Components/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = _ref => {\n  _s();\n  let {\n    token\n  } = _ref;\n  const [accountType, setAccountType] = useState(\"\");\n  const [accountStatus, setAccountStatus] = useState(\"\");\n  const [accountFunds, setAccountFunds] = useState(0);\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n\n  // Utilizamos useParams para obtener el userId desde la URL\n  const {\n    userId\n  } = useParams();\n  console.log(\"userId:\", userId);\n  useEffect(() => {\n    // Verifica si userId es undefined o tiene un valor válido\n    if (userId) {\n      // Al cargar el componente, obtener la lista de cuentas del usuario\n      fetchAccounts();\n    }\n  }, [userId, token]); // Asegúrate de incluir userId en las dependencias\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/accounts/user/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAccounts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching accounts:\", error);\n    }\n  };\n  const createAccount = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8000/api/accounts/user/new/${userId}`, {\n        accountType,\n        accountStatus,\n        accountFunds,\n        accountNumber\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Account created successfully\");\n      // Actualizar la lista de cuentas después de la creación\n      fetchAccounts();\n    } catch (error) {\n      //alert(\"Error creating account: \" + error.response.data.message);\n      alert(\"Error creating account: \" + JSON.stringify(error.response.data));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAccountType(e.target.value),\n        value: accountType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAccountStatus(e.target.value),\n        value: accountStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Funds: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setAccountFunds(e.target.value),\n        value: accountFunds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setAccountNumber(e.target.value),\n        value: accountNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createAccount,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Type: \", account.accountType, \", Status: \", account.accountStatus, \",\", \" \", \"Funds: \", account.accountFunds, \", Number: \", account.accountNumber]\n      }, account._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"L2ooC2xKM8yNYcuSzKbCyP6s8ko=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Dashboard","_ref","_s","token","accountType","setAccountType","accountStatus","setAccountStatus","accountFunds","setAccountFunds","accountNumber","setAccountNumber","accounts","setAccounts","userId","console","log","fetchAccounts","response","get","headers","Authorization","data","error","createAccount","post","alert","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","map","account","_id","_c","$RefreshReg$"],"sources":["/Users/josemontero/Documents/Pasantías/Code/Actividad/BANCO/client/src/Components/Dashboard.jsx"],"sourcesContent":["// Dashboard.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nconst Dashboard = ({ token }) => {\n  const [accountType, setAccountType] = useState(\"\");\n  const [accountStatus, setAccountStatus] = useState(\"\");\n  const [accountFunds, setAccountFunds] = useState(0);\n  const [accountNumber, setAccountNumber] = useState(\"\");\n  const [accounts, setAccounts] = useState([]);\n\n  // Utilizamos useParams para obtener el userId desde la URL\n  const { userId } = useParams();\n  console.log(\"userId:\", userId);\n\n  useEffect(() => {\n    // Verifica si userId es undefined o tiene un valor válido\n    if (userId) {\n      // Al cargar el componente, obtener la lista de cuentas del usuario\n      fetchAccounts();\n    }\n  }, [userId, token]); // Asegúrate de incluir userId en las dependencias\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/accounts/user/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setAccounts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching accounts:\", error);\n    }\n  };\n\n  const createAccount = async () => {\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/accounts/user/new/${userId}`,\n        {\n          accountType,\n          accountStatus,\n          accountFunds,\n          accountNumber,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      alert(\"Account created successfully\");\n      // Actualizar la lista de cuentas después de la creación\n      fetchAccounts();\n    } catch (error) {\n      //alert(\"Error creating account: \" + error.response.data.message);\n      alert(\"Error creating account: \" + JSON.stringify(error.response.data));\n    }\n  };\n\n  return (\n    <div>\n      <h2>Create Account</h2>\n      <form>\n        <label>Account Type: </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setAccountType(e.target.value)}\n          value={accountType}\n        />\n        <br />\n\n        <label>Account Status: </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setAccountStatus(e.target.value)}\n          value={accountStatus}\n        />\n        <br />\n\n        <label>Account Funds: </label>\n        <input\n          type=\"number\"\n          onChange={(e) => setAccountFunds(e.target.value)}\n          value={accountFunds}\n        />\n        <br />\n\n        <label>Account Number: </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setAccountNumber(e.target.value)}\n          value={accountNumber}\n        />\n        <br />\n\n        <button type=\"button\" onClick={createAccount}>\n          Create Account\n        </button>\n      </form>\n\n      <h2>Your Accounts</h2>\n      <ul>\n        {accounts.map((account) => (\n          <li key={account._id}>\n            Type: {account.accountType}, Status: {account.accountStatus},{\" \"}\n            Funds: {account.accountFunds}, Number: {account.accountNumber}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}